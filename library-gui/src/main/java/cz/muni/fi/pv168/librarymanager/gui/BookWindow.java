/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.muni.fi.pv168.librarymanager.gui;

import cz.muni.fi.pv168.librarymanager.backend.Book;
import java.awt.Window;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;

/**
 *
 * @author Skylar
 */
public class BookWindow extends javax.swing.JPanel {

    private String action;
    private Book book;
    private ResourceBundle bundle;
    private JTable table;
    
    
    public BookWindow(String action,Book book,ResourceBundle bundle,
            JTable table) {
        this.action = action;
        this.book = book;
        this.bundle = bundle;
        this.table = table;
        initComponents();
        switch(action){
            case "add":
                jLabelBookWindow.setText(bundle.getString("newBook"));
                break;
            case "edit":
                jLabelBookWindow.setText(bundle.getString("editBook"));
                setTextsFromBooks(book);
                break;
            /*case "filter": 
                jLabel1.setText(texts.getString("filterCustomers"));
                setTextsFromCustomer(customer);
                break;                */
        }
    }
    
    private void setTextsFromBooks(Book book) {
        jTextFieldTitle.setText(book.getTitle());
        jTextFieldAuthor.setText(book.getAuthor());
        jSpinnerYearOfPublication.setValue((book.getYearOfPublication()));
    }

    private void editBook() {
        List<String> incorrectInputs = checkInputs();
        if(!incorrectInputs.isEmpty()){
            JOptionPane.showMessageDialog(null, bundle.getString("fillUp") +": "+
                            incorrectInputs.toString(),bundle.getString("incorrectInput"),
                    JOptionPane.DEFAULT_OPTION);
            return;
        }
        
        fillUpBookFromTextInput();
        int selectedRow = table.getSelectedRow();
        ((BookTableModel)table.getModel()).updateBook(book, selectedRow);
        Window win = SwingUtilities.getWindowAncestor(this);
        win.dispose(); 
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabelBookWindow = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        jLabelAuthor = new javax.swing.JLabel();
        jLabelYearOfPublication = new javax.swing.JLabel();
        jTextFieldTitle = new javax.swing.JTextField();
        jTextFieldAuthor = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSpinnerYearOfPublication = new javax.swing.JSpinner();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabelBookWindow.setText("Add new book :");

        jLabelTitle.setText("Title:");

        jLabelAuthor.setText("Author:");

        jLabelYearOfPublication.setText("YearOfPublication:");

        jTextFieldTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTitleActionPerformed(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSpinnerYearOfPublication.setModel(new javax.swing.SpinnerNumberModel(2000, 1000, 2015, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTitle)
                            .addComponent(jLabelAuthor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldTitle)
                            .addComponent(jTextFieldAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelYearOfPublication)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jSpinnerYearOfPublication)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabelBookWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBookWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelTitle)
                    .addComponent(jTextFieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAuthor)
                    .addComponent(jTextFieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelYearOfPublication)
                    .addComponent(jSpinnerYearOfPublication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTitleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        switch(action){
            case "add":
                addBook();
                break;
            case "edit":
                editBook();
                break;
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabelAuthor;
    private javax.swing.JLabel jLabelBookWindow;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelYearOfPublication;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerYearOfPublication;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldAuthor;
    private javax.swing.JTextField jTextFieldTitle;
    // End of variables declaration//GEN-END:variables

    private List<String> checkInputs() {
        List<String> incorrectInputs = new ArrayList<>();
        if (jTextFieldTitle.getText().isEmpty()) {
            incorrectInputs.add(jLabelTitle.getText());
        }
        if (jTextFieldAuthor.getText().isEmpty()) {
            incorrectInputs.add(jLabelAuthor.getText());
        }
        return incorrectInputs;
        
    }
    
    private void fillUpBookFromTextInput() {
        book.setTitle(jTextFieldTitle.getText());
        book.setAuthor(jTextFieldAuthor.getText());
        book.setYearOfPublication((int) jSpinnerYearOfPublication.getValue());
    }
    
    private void addBook() {
        book = new Book();
        List<String> incorrectInputs = checkInputs();
        if(!incorrectInputs.isEmpty()){
            JOptionPane.showMessageDialog(null, bundle.getString("fillUp") +": "+
                            incorrectInputs.toString(),bundle.getString("incorrectInput"),
                    JOptionPane.DEFAULT_OPTION);
            return;
        }
        
        fillUpBookFromTextInput();
        
        ((BookTableModel)table.getModel()).addBook(book);
        Window win = SwingUtilities.getWindowAncestor(this);
        win.dispose(); 
    }
}
